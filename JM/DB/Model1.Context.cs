//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JM.DB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PresupuestoEntities5 : DbContext
    {
        public PresupuestoEntities5()
            : base("name=PresupuestoEntities5")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Abonado> Abonadoes { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<Compania> Companias { get; set; }
        public virtual DbSet<Comprobante_Pago> Comprobante_Pago { get; set; }
        public virtual DbSet<Comprobante_pago_informal> Comprobante_pago_informal { get; set; }
        public virtual DbSet<ComprobantePagoSinPresupuesto> ComprobantePagoSinPresupuestoes { get; set; }
        public virtual DbSet<EmpleadoPresupuesto> EmpleadoPresupuestoes { get; set; }
        public virtual DbSet<Materiale> Materiales { get; set; }
        public virtual DbSet<Pago_Concepto> Pago_Concepto { get; set; }
        public virtual DbSet<Pago_Informal> Pago_Informal { get; set; }
        public virtual DbSet<PagoDetalle> PagoDetalles { get; set; }
        public virtual DbSet<PagoMaestro> PagoMaestroes { get; set; }
        public virtual DbSet<Presupuesto> Presupuestos { get; set; }
        public virtual DbSet<Proyecto_detalle> Proyecto_detalle { get; set; }
        public virtual DbSet<ProyectoConPresupuesto> ProyectoConPresupuestoes { get; set; }
        public virtual DbSet<ProyectoDetalleSinPresupuesto> ProyectoDetalleSinPresupuestoes { get; set; }
        public virtual DbSet<ProyectoSinPresupuesto> ProyectoSinPresupuestoes { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TipoEmpleado> TipoEmpleadoes { get; set; }
        public virtual DbSet<Unidad> Unidads { get; set; }
        public virtual DbSet<Vendedore> Vendedores { get; set; }
        public virtual DbSet<g> g { get; set; }
        public virtual DbSet<hola> holas { get; set; }
        public virtual DbSet<View_CabeceraAmbos> View_CabeceraAmbos { get; set; }
        public virtual DbSet<View_Guardar_Materiales_Detalle> View_Guardar_Materiales_Detalle { get; set; }
        public virtual DbSet<View_Guardar_Obra_Detalle> View_Guardar_Obra_Detalle { get; set; }
        public virtual DbSet<View_Listar_Obra_2> View_Listar_Obra_2 { get; set; }
        public virtual DbSet<View_materiales_detalle> View_materiales_detalle { get; set; }
        public virtual DbSet<View_PresupuestoListarProyectoSinPresupuestoActivos> View_PresupuestoListarProyectoSinPresupuestoActivos { get; set; }
        public virtual DbSet<Vista_ListaDeMateriales> Vista_ListaDeMateriales { get; set; }
        public virtual DbSet<Vista_ListadoPresupuestoMateriales> Vista_ListadoPresupuestoMateriales { get; set; }
        public virtual DbSet<Vista_ListadoPresupuestoObra> Vista_ListadoPresupuestoObra { get; set; }
        public virtual DbSet<Pago> Pagoes { get; set; }
        public virtual DbSet<Materiales_detalle> Materiales_detalle { get; set; }
        public virtual DbSet<Obra_detalle> Obra_detalle { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
    
        public virtual ObjectResult<CompaniaDato_Result> CompaniaDato()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CompaniaDato_Result>("CompaniaDato");
        }
    
        public virtual ObjectResult<Filtrar_Abonado_Result> Filtrar_Abonado(string studentID)
        {
            var studentIDParameter = studentID != null ?
                new ObjectParameter("StudentID", studentID) :
                new ObjectParameter("StudentID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Filtrar_Abonado_Result>("Filtrar_Abonado", studentIDParameter);
        }
    
        public virtual ObjectResult<Filtrar_Empleados_activos_Result> Filtrar_Empleados_activos(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Filtrar_Empleados_activos_Result>("Filtrar_Empleados_activos", queryParameter);
        }
    
        public virtual ObjectResult<Filtrar_pago_concepto_Result> Filtrar_pago_concepto(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Filtrar_pago_concepto_Result>("Filtrar_pago_concepto", idParameter);
        }
    
        public virtual ObjectResult<FiltrarConceptoPago_Result> FiltrarConceptoPago(string valor)
        {
            var valorParameter = valor != null ?
                new ObjectParameter("valor", valor) :
                new ObjectParameter("valor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FiltrarConceptoPago_Result>("FiltrarConceptoPago", valorParameter);
        }
    
        public virtual int guardar_obras_listado(Nullable<int> iD, string descripcion, string unidad, Nullable<int> precio, Nullable<int> cantidad, Nullable<int> total, Nullable<int> tipo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("Unidad", unidad) :
                new ObjectParameter("Unidad", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("guardar_obras_listado", iDParameter, descripcionParameter, unidadParameter, precioParameter, cantidadParameter, totalParameter, tipoParameter);
        }
    
        public virtual int guardar_presupuesto_cabeza(string fecha, Nullable<int> idCliente, string direccion, string comentario)
        {
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("guardar_presupuesto_cabeza", fechaParameter, idClienteParameter, direccionParameter, comentarioParameter);
        }
    
        public virtual int guardar_presupuestos_listado(Nullable<int> iD, string descripcion, string unidad, Nullable<int> precio, Nullable<int> cantidad, Nullable<int> total)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("Unidad", unidad) :
                new ObjectParameter("Unidad", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("guardar_presupuestos_listado", iDParameter, descripcionParameter, unidadParameter, precioParameter, cantidadParameter, totalParameter);
        }
    
        public virtual int guardar_presupuestos_listados(Nullable<int> iD, string descripcion, string unidad, Nullable<int> precio, Nullable<int> cantidad, Nullable<int> total, Nullable<int> tipo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("Unidad", unidad) :
                new ObjectParameter("Unidad", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("guardar_presupuestos_listados", iDParameter, descripcionParameter, unidadParameter, precioParameter, cantidadParameter, totalParameter, tipoParameter);
        }
    
        public virtual int GuardarProyecto(Nullable<int> idPresupuesto, Nullable<int> valor, string direccion, string decripcion, string fe, Nullable<int> estado)
        {
            var idPresupuestoParameter = idPresupuesto.HasValue ?
                new ObjectParameter("IdPresupuesto", idPresupuesto) :
                new ObjectParameter("IdPresupuesto", typeof(int));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var decripcionParameter = decripcion != null ?
                new ObjectParameter("Decripcion", decripcion) :
                new ObjectParameter("Decripcion", typeof(string));
    
            var feParameter = fe != null ?
                new ObjectParameter("fe", fe) :
                new ObjectParameter("fe", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarProyecto", idPresupuestoParameter, valorParameter, direccionParameter, decripcionParameter, feParameter, estadoParameter);
        }
    
        public virtual int GuardarProyectoDetalleSinPresupuesto(Nullable<int> empleado, Nullable<int> idProyecto)
        {
            var empleadoParameter = empleado.HasValue ?
                new ObjectParameter("Empleado", empleado) :
                new ObjectParameter("Empleado", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarProyectoDetalleSinPresupuesto", empleadoParameter, idProyectoParameter);
        }
    
        public virtual int GuardarProyectoSinPresupuestos(Nullable<int> idCliente, Nullable<int> valor, string direccion, string decripcion, string fe, Nullable<int> estado)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var valorParameter = valor.HasValue ?
                new ObjectParameter("Valor", valor) :
                new ObjectParameter("Valor", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var decripcionParameter = decripcion != null ?
                new ObjectParameter("Decripcion", decripcion) :
                new ObjectParameter("Decripcion", typeof(string));
    
            var feParameter = fe != null ?
                new ObjectParameter("fe", fe) :
                new ObjectParameter("fe", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarProyectoSinPresupuestos", idClienteParameter, valorParameter, direccionParameter, decripcionParameter, feParameter, estadoParameter);
        }
    
        public virtual ObjectResult<holasi_Result> holasi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<holasi_Result>("holasi");
        }
    
        public virtual int Presupuestos_listado_ID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Presupuestos_listado_ID", iDParameter);
        }
    
        public virtual ObjectResult<ProyectoListaEmpleados_Result> ProyectoListaEmpleados(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProyectoListaEmpleados_Result>("ProyectoListaEmpleados", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> recuperar_idPresupuesto(Nullable<int> idcliente, string fecha, string descripcion)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("recuperar_idPresupuesto", idclienteParameter, fechaParameter, descripcionParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_FiltrarClienteActivo_Result> SP_FiltrarClienteActivo(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FiltrarClienteActivo_Result>("SP_FiltrarClienteActivo", queryParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_ListadoPresupuestoDeMateriales_Result> SP_ListadoPresupuestoDeMateriales(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoPresupuestoDeMateriales_Result>("SP_ListadoPresupuestoDeMateriales", tipoParameter);
        }
    
        public virtual ObjectResult<SP_ListadoPresupuestoDeMaterialesFiltrar_Result> SP_ListadoPresupuestoDeMaterialesFiltrar(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoPresupuestoDeMaterialesFiltrar_Result>("SP_ListadoPresupuestoDeMaterialesFiltrar", queryParameter);
        }
    
        public virtual ObjectResult<SP_ListaEmpleadosAsignados_Result> SP_ListaEmpleadosAsignados(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListaEmpleadosAsignados_Result>("SP_ListaEmpleadosAsignados", idParameter);
        }
    
        public virtual ObjectResult<SP_ListaPresupuestoMateriales_Result> SP_ListaPresupuestoMateriales(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListaPresupuestoMateriales_Result>("SP_ListaPresupuestoMateriales", tipoParameter);
        }
    
        public virtual ObjectResult<SP_ListarObraDetalle_Result> SP_ListarObraDetalle(Nullable<int> id, Nullable<int> tipo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListarObraDetalle_Result>("SP_ListarObraDetalle", idParameter, tipoParameter);
        }
    
        public virtual ObjectResult<SP_ListarObraMateriales_Result> SP_ListarObraMateriales(Nullable<int> id, Nullable<int> tipo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListarObraMateriales_Result>("SP_ListarObraMateriales", idParameter, tipoParameter);
        }
    
        public virtual ObjectResult<SP_listarProyectoSinPresupuestoActivos_Result> SP_listarProyectoSinPresupuestoActivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_listarProyectoSinPresupuestoActivos_Result>("SP_listarProyectoSinPresupuestoActivos");
        }
    
        public virtual ObjectResult<SP_ModificarProyecto_Result> SP_ModificarProyecto(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ModificarProyecto_Result>("SP_ModificarProyecto", idParameter);
        }
    
        public virtual ObjectResult<SP_ModificarProyectoCliente_Result> SP_ModificarProyectoCliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ModificarProyectoCliente_Result>("SP_ModificarProyectoCliente", idParameter);
        }
    
        public virtual ObjectResult<SP_ModificarProyectoFiltro_Result> SP_ModificarProyectoFiltro(Nullable<int> id, string query)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ModificarProyectoFiltro_Result>("SP_ModificarProyectoFiltro", idParameter, queryParameter);
        }
    
        public virtual int SP_ProyectoDetalleSinPresupuesto(Nullable<int> idEmpleado, Nullable<int> idProyecto)
        {
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("IdProyecto", idProyecto) :
                new ObjectParameter("IdProyecto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ProyectoDetalleSinPresupuesto", idEmpleadoParameter, idProyectoParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Detalle_Materiales_Result> SP_Reporte_Detalle_Materiales(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Detalle_Materiales_Result>("SP_Reporte_Detalle_Materiales", idParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Detalles_Cliente_Result> SP_Reporte_Detalles_Cliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Detalles_Cliente_Result>("SP_Reporte_Detalles_Cliente", idParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Detalles_Materiales_Result> SP_Reporte_Detalles_Materiales(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Detalles_Materiales_Result>("SP_Reporte_Detalles_Materiales", idParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Detalles_Materiales3_Result> SP_Reporte_Detalles_Materiales3(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Detalles_Materiales3_Result>("SP_Reporte_Detalles_Materiales3", idParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Detalles_Materiales4_Result> SP_Reporte_Detalles_Materiales4(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Detalles_Materiales4_Result>("SP_Reporte_Detalles_Materiales4", idParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Empleados_Result> SP_Reporte_Empleados(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Empleados_Result>("SP_Reporte_Empleados", idParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_Materiales_Cliente_Result> SP_Reporte_Materiales_Cliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_Materiales_Cliente_Result>("SP_Reporte_Materiales_Cliente", idParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Traer_ObrasDetalles_Por_Id_Result> Traer_ObrasDetalles_Por_Id(Nullable<int> myId)
        {
            var myIdParameter = myId.HasValue ?
                new ObjectParameter("myId", myId) :
                new ObjectParameter("myId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Traer_ObrasDetalles_Por_Id_Result>("Traer_ObrasDetalles_Por_Id", myIdParameter);
        }
    
        public virtual ObjectResult<TraerMaterialesDetallesPorId_Result> TraerMaterialesDetallesPorId(Nullable<int> myId)
        {
            var myIdParameter = myId.HasValue ?
                new ObjectParameter("myId", myId) :
                new ObjectParameter("myId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TraerMaterialesDetallesPorId_Result>("TraerMaterialesDetallesPorId", myIdParameter);
        }
    
        public virtual ObjectResult<ListadoPagosPorProyecto_Result> ListadoPagosPorProyecto(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoPagosPorProyecto_Result>("ListadoPagosPorProyecto", idParameter);
        }
    
        public virtual ObjectResult<SP_ListadoPresupuestoDeManoDeObra_Result> SP_ListadoPresupuestoDeManoDeObra(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoPresupuestoDeManoDeObra_Result>("SP_ListadoPresupuestoDeManoDeObra", tipoParameter);
        }
    
        public virtual ObjectResult<SP_Reporte_DetallesManoObra4_Result> SP_Reporte_DetallesManoObra4(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Reporte_DetallesManoObra4_Result>("SP_Reporte_DetallesManoObra4", idParameter);
        }
    
        public virtual ObjectResult<descripcionDireccion_Result> descripcionDireccion(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<descripcionDireccion_Result>("descripcionDireccion", idParameter);
        }
    
        public virtual ObjectResult<ReporteManoObra5_Result> ReporteManoObra5(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteManoObra5_Result>("ReporteManoObra5", idParameter);
        }
    
        public virtual ObjectResult<ReporteMateriales5_Result> ReporteMateriales5(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteMateriales5_Result>("ReporteMateriales5", idParameter);
        }
    
        public virtual int update_Materiales(Nullable<int> idPresupuesto, string descrip, string unidad, Nullable<int> precio, Nullable<int> cantidad, Nullable<int> total, Nullable<int> totalgeneral)
        {
            var idPresupuestoParameter = idPresupuesto.HasValue ?
                new ObjectParameter("idPresupuesto", idPresupuesto) :
                new ObjectParameter("idPresupuesto", typeof(int));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("unidad", unidad) :
                new ObjectParameter("unidad", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(int));
    
            var totalgeneralParameter = totalgeneral.HasValue ?
                new ObjectParameter("totalgeneral", totalgeneral) :
                new ObjectParameter("totalgeneral", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_Materiales", idPresupuestoParameter, descripParameter, unidadParameter, precioParameter, cantidadParameter, totalParameter, totalgeneralParameter);
        }
    
        public virtual int update_Obra(Nullable<int> idPresupuesto, string descrip, string unidad, Nullable<int> precio, Nullable<int> cantidad, Nullable<int> total, Nullable<int> totalgeneral)
        {
            var idPresupuestoParameter = idPresupuesto.HasValue ?
                new ObjectParameter("idPresupuesto", idPresupuesto) :
                new ObjectParameter("idPresupuesto", typeof(int));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("unidad", unidad) :
                new ObjectParameter("unidad", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(int));
    
            var totalgeneralParameter = totalgeneral.HasValue ?
                new ObjectParameter("totalgeneral", totalgeneral) :
                new ObjectParameter("totalgeneral", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_Obra", idPresupuestoParameter, descripParameter, unidadParameter, precioParameter, cantidadParameter, totalParameter, totalgeneralParameter);
        }
    
        public virtual int insert_Materiales(Nullable<int> idPresupuesto, string descrip, string unidad, Nullable<int> precio, Nullable<int> cantidad, Nullable<int> total, Nullable<int> totalgeneral)
        {
            var idPresupuestoParameter = idPresupuesto.HasValue ?
                new ObjectParameter("idPresupuesto", idPresupuesto) :
                new ObjectParameter("idPresupuesto", typeof(int));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("unidad", unidad) :
                new ObjectParameter("unidad", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("total", total) :
                new ObjectParameter("total", typeof(int));
    
            var totalgeneralParameter = totalgeneral.HasValue ?
                new ObjectParameter("totalgeneral", totalgeneral) :
                new ObjectParameter("totalgeneral", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_Materiales", idPresupuestoParameter, descripParameter, unidadParameter, precioParameter, cantidadParameter, totalParameter, totalgeneralParameter);
        }
    
        public virtual int BorrarTodoMateriales_detalle(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarTodoMateriales_detalle", idParameter);
        }
    
        public virtual int BorrarTodoObra_detalle(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarTodoObra_detalle", idParameter);
        }
    
        public virtual int guardar_materiales_listado(Nullable<int> iD, string descripcion, string unidad, Nullable<int> precio, Nullable<int> cantidad, Nullable<int> total, Nullable<int> tipo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var unidadParameter = unidad != null ?
                new ObjectParameter("Unidad", unidad) :
                new ObjectParameter("Unidad", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var totalParameter = total.HasValue ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("guardar_materiales_listado", iDParameter, descripcionParameter, unidadParameter, precioParameter, cantidadParameter, totalParameter, tipoParameter);
        }
    
        public virtual int holae(Nullable<int> id, Nullable<int> idEmpleado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("holae", idParameter, idEmpleadoParameter);
        }
    
        public virtual int SP_Borrrado_deEmpleados(Nullable<int> idPresupuesto)
        {
            var idPresupuestoParameter = idPresupuesto.HasValue ?
                new ObjectParameter("idPresupuesto", idPresupuesto) :
                new ObjectParameter("idPresupuesto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Borrrado_deEmpleados", idPresupuestoParameter);
        }
    
        public virtual int SP_BorrradoeInsertado_deEmpleados(Nullable<int> id, Nullable<int> idEmpleado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BorrradoeInsertado_deEmpleados", idParameter, idEmpleadoParameter);
        }
    
        public virtual int SP_insertado_deEmpleados(Nullable<int> id, Nullable<int> idEmpleado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idEmpleadoParameter = idEmpleado.HasValue ?
                new ObjectParameter("idEmpleado", idEmpleado) :
                new ObjectParameter("idEmpleado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_insertado_deEmpleados", idParameter, idEmpleadoParameter);
        }
    
        public virtual ObjectResult<SP_ListadoPresupuestoDeManoDeObraQuery_Result> SP_ListadoPresupuestoDeManoDeObraQuery(Nullable<int> tipo, string query)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoPresupuestoDeManoDeObraQuery_Result>("SP_ListadoPresupuestoDeManoDeObraQuery", tipoParameter, queryParameter);
        }
    
        public virtual ObjectResult<SP_ListadoPresupuestoDeManoDeObraQuery1_Result> SP_ListadoPresupuestoDeManoDeObraQuery1(Nullable<int> tipo, string query)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoPresupuestoDeManoDeObraQuery1_Result>("SP_ListadoPresupuestoDeManoDeObraQuery1", tipoParameter, queryParameter);
        }
    
        public virtual ObjectResult<Acceso_Result> Acceso(string usuario, string pass)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Acceso_Result>("Acceso", usuarioParameter, passParameter);
        }
    
        public virtual ObjectResult<holamundo_Result> holamundo(Nullable<int> tipo, string query)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<holamundo_Result>("holamundo", tipoParameter, queryParameter);
        }
    
        public virtual ObjectResult<holamundoManoDeObra_Result> holamundoManoDeObra(Nullable<int> tipo, string query)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<holamundoManoDeObra_Result>("holamundoManoDeObra", tipoParameter, queryParameter);
        }
    
        public virtual ObjectResult<holamundopresupuesto_Result> holamundopresupuesto(Nullable<int> tipo, string query)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<holamundopresupuesto_Result>("holamundopresupuesto", tipoParameter, queryParameter);
        }
    
        public virtual ObjectResult<x_Result> x(Nullable<int> tipo, string query)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("Query", query) :
                new ObjectParameter("Query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<x_Result>("x", tipoParameter, queryParameter);
        }
    
        public virtual ObjectResult<SP_ListadoPresupuestoDeMaterialesQury_Result> SP_ListadoPresupuestoDeMaterialesQury(Nullable<int> tipo, string query)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ListadoPresupuestoDeMaterialesQury_Result>("SP_ListadoPresupuestoDeMaterialesQury", tipoParameter, queryParameter);
        }
    
        public virtual ObjectResult<ListadoPagosPorProyectoDetalle_Result> ListadoPagosPorProyectoDetalle(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoPagosPorProyectoDetalle_Result>("ListadoPagosPorProyectoDetalle", idParameter);
        }
    
        public virtual ObjectResult<ListadoPagosPorProyectoDetalles_Result> ListadoPagosPorProyectoDetalles(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoPagosPorProyectoDetalles_Result>("ListadoPagosPorProyectoDetalles", idParameter);
        }
    
        public virtual ObjectResult<ListadoPagosPorProyectos_Result> ListadoPagosPorProyectos(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListadoPagosPorProyectos_Result>("ListadoPagosPorProyectos", idParameter);
        }
    }
}
